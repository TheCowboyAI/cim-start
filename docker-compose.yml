version: '3.8'

services:
  nats:
    image: nats:2.10-alpine
    container_name: cim-nats
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
      - "6222:6222"  # Cluster routing (for future scaling)
    command: 
      - "-js"                 # Enable JetStream
      - "-sd"                 # Storage directory
      - "/data"
      - "-m"                  # Monitoring port
      - "8222"
      - "--name"              # Server name
      - "cim-nats-1"
      - "-DV"                 # Debug and trace logging
    volumes:
      - nats-data:/data
      - ./nats.conf:/etc/nats/nats.conf:ro
    environment:
      - NATS_JETSTREAM_STORAGE_DIR=/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cim-network

  nats-box:
    image: natsio/nats-box:latest
    container_name: cim-nats-box
    depends_on:
      nats:
        condition: service_healthy
    command: sleep infinity
    volumes:
      - ./scripts:/scripts
      - ./domains:/domains
    networks:
      - cim-network
    environment:
      - NATS_URL=nats://nats:4222

  # Optional: NATS Surveyor for Prometheus metrics
  nats-surveyor:
    image: natsio/nats-surveyor:latest
    container_name: cim-nats-surveyor
    depends_on:
      nats:
        condition: service_healthy
    command:
      - "-s"
      - "nats://nats:4222"
      - "-p"
      - "7777"
    ports:
      - "7777:7777"  # Prometheus metrics
    networks:
      - cim-network
    restart: unless-stopped

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: cim-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - cim-network
    restart: unless-stopped

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: cim-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - cim-network
    restart: unless-stopped

volumes:
  nats-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  cim-network:
    driver: bridge